// SCSS VARIABLES
$box-shadow: 2px 2px 4px grey;
$body-background: #35373a;
$text-background: #3b3d41;
$bar-background: #ee7d3c;
$code-background: #35373a;
$text-color: #fff;
$link-color: #ff9555;
$border-default: 1px solid $bar-background;

// SCSS FUNCTIONS
@function calculateRem($size, $base: 16px) {
  $remSize: ($size / $base);
  @return #{$remSize}rem;
}

// SCSS MIXINS
@mixin text-shadow($x: 1px, $y: 1px, $blur: 2px, $color: black) {
  text-shadow: $x $y $blur $color;
}

/***GENERAL STYLING***/
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: 'Quicksand', sans-serif;
  color: $text-color;
}

a {
  color: $link-color;
  font-weight: 600;
  text-decoration: none;
  &:hover,
  &:focus {
    color: #b45922;
  }
}

.text-center {
  text-align: center;
}

/***MAIN STRUCTURE STYLING***/
.outer {
  background-color: $body-background;
  display: flex;
  flex-flow: column;
  height: 100vh;
}

header {
  font-size: calculateRem(24px);
  // @include text-shadow();
}

.container {
  display: flex;
  height: calc(100vh - (60px + 56px)); /* minus header + footer */
  width: 100%;
  padding: 5px 5px;
}

.flexitem {
  display: flex;
  flex: {
    flow: column;
    basis: 50%;
  }
  height: 100%;
  max-width: 50%; /* keeps input & previewer same width */
  padding: 5px;
}

.bar {
  background-color: $bar-background;
  border: $border-default {
    bottom-width: 0;
    radius: 15px 15px 0 0;
  }
  // box-shadow: $box-shadow;
  color: black;
  font-size: 1.2rem;
  font-weight: 700;
  padding: 5px;
  p {
    padding-left: 10px;
    // @include text-shadow(1px, 1px, 1px, #404040);
  }
}

.editor,
.preview {
  background-color: $text-background;
  color: $text-color;
  // box-shadow: $box-shadow;
  border: 1px solid $bar-background;
  height: 100%;
  overflow: auto; /* enables scrollbar */
  padding: 10px;
  resize: none; /* prevents resizing of textarea box */
}

.editor:focus-within,
.preview:focus-within {
  outline: none;
  border-color: white;
}

footer {
  font: {
    size: calculateRem(18px);
    weight: 600;
  }
  padding: {
    bottom: 5px;
    top: 5px;
  }
}

/***PREVIEW BOX TEXT STYLING***/
code {
  background-color: $code-background;
  padding: 0 0.1em;
}

/* pre wraps code elements to create a codeblock */
pre {
  @extend code; // extends rules from code above
  margin: 1em 0;
  padding: 0.7em;
}

ul {
  padding-left: 30px; /* reapply margin to li elements */
}

blockquote {
  margin: 1em 40px;
  border-left: 2px solid $bar-background;
  p {
    margin-left: 10px;
  }
}

#preview {
  overflow-wrap: break-word; /* forces long words to wrap */
  p {
    margin-top: 0.7em;
    margin-bottom: 0.7em;
  }
  h1 {
    margin: 0.25em 0;
    padding-bottom: 0.2em;
    border-bottom: 2px solid $text-color;
  }
  h2 {
    margin-top: 0.83em;
    margin-bottom: 0.83em;
  }
  h3 {
    margin-top: 1em;
    margin-bottom: 1em;
  }
  h4 {
    margin-top: 1.33em;
    margin-bottom: 1.33em;
  }
  h5 {
    margin-top: 1.67em;
    margin-bottom: 1.67em;
  }
  h6 {
    margin-top: 2.33em;
    margin-bottom: 2.33em;
  }
}

table {
  border-collapse: collapse; /* removes gaps between cells */
}

td,
th {
  border: $border-default;
  padding: 2px 5px;
}

/***MEDIA BREAKS***/
/* switch to column layout for narrow displays; reduce font-size */
@media (max-width: 700px) {
  $basefont: 14px; // new base font-size for calculating rems

  html {
    font-size: calculateRem($basefont);
  }

  header {
    font-size: calculateRem(12px, $basefont);
    padding-top: 5px;
    padding-bottom: 5px;
  }

  .container {
    flex-direction: column;
    height: calc(100vh - (40px + 38px)); /* header - footer */
  }

  .flexitem {
    max-width: 100%;
    max-height: 50%;
  }

  textarea {
    font-size: calculateRem(11px, $basefont);
  }

  #preview h1 {
    font-size: calculateRem(24px, $basefont);
  }

  footer {
    font-size: calculateRem(11px, $basefont);
  }
}
